//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yandex.Cloud.Generated
{
    
    
    public class Services_Ydb : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ydb(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ydb")
        {
        }
        
        public virtual Yandex.Cloud.Ydb.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Ydb.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ydb.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Ydb.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ydb.V1.LocationService.LocationServiceClient LocationService
        {
            get
            {
                return new Yandex.Cloud.Ydb.V1.LocationService.LocationServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ydb.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Ydb.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ydb.V1.StorageTypeService.StorageTypeServiceClient StorageTypeService
        {
            get
            {
                return new Yandex.Cloud.Ydb.V1.StorageTypeService.StorageTypeServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Vpc_Privatelink : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Vpc_Privatelink(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "vpc")
        {
        }
        
        public virtual Yandex.Cloud.Vpc.V1.Privatelink.PrivateEndpointService.PrivateEndpointServiceClient PrivateEndpointService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.Privatelink.PrivateEndpointService.PrivateEndpointServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Vpc : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Vpc(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "vpc")
        {
        }
        
        public virtual Yandex.Cloud.Vpc.V1.AddressService.AddressServiceClient AddressService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.AddressService.AddressServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Vpc.V1.GatewayService.GatewayServiceClient GatewayService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.GatewayService.GatewayServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Vpc.V1.NetworkService.NetworkServiceClient NetworkService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.NetworkService.NetworkServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Vpc.V1.RouteTableService.RouteTableServiceClient RouteTableService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.RouteTableService.RouteTableServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Vpc.V1.SecurityGroupService.SecurityGroupServiceClient SecurityGroupService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.SecurityGroupService.SecurityGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Vpc.V1.SubnetService.SubnetServiceClient SubnetService
        {
            get
            {
                return new Yandex.Cloud.Vpc.V1.SubnetService.SubnetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Vpc_Privatelink Privatelink
        {
            get
            {
                return new Services_Vpc_Privatelink(this.Sdk());
            }
        }
    }
    
    public class Services_Video : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Video(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "video")
        {
        }
        
        public virtual Yandex.Cloud.Video.V1.ChannelService.ChannelServiceClient ChannelService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.ChannelService.ChannelServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.EpisodeService.EpisodeServiceClient EpisodeService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.EpisodeService.EpisodeServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.PlaylistService.PlaylistServiceClient PlaylistService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.PlaylistService.PlaylistServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.StreamLineService.StreamLineServiceClient StreamLineService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.StreamLineService.StreamLineServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.StreamService.StreamServiceClient StreamService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.StreamService.StreamServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.SubtitleService.SubtitleServiceClient SubtitleService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.SubtitleService.SubtitleServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.ThumbnailService.ThumbnailServiceClient ThumbnailService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.ThumbnailService.ThumbnailServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Video.V1.VideoService.VideoServiceClient VideoService
        {
            get
            {
                return new Yandex.Cloud.Video.V1.VideoService.VideoServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Trino : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Trino(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Trino is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Trino.V1.CatalogService.CatalogServiceClient CatalogService
        {
            get
            {
                return new Yandex.Cloud.Trino.V1.CatalogService.CatalogServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Trino.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Trino.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Storage : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Storage(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "storage-api")
        {
        }
        
        public virtual Yandex.Cloud.Storage.V1.BucketService.BucketServiceClient BucketService
        {
            get
            {
                return new Yandex.Cloud.Storage.V1.BucketService.BucketServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Speechsense : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Speechsense(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "speechsense")
        {
        }
        
        public virtual Yandex.Cloud.Speechsense.V1.ClassifiersService.ClassifiersServiceClient ClassifiersService
        {
            get
            {
                return new Yandex.Cloud.Speechsense.V1.ClassifiersService.ClassifiersServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Speechsense.V1.ProjectService.ProjectServiceClient ProjectService
        {
            get
            {
                return new Yandex.Cloud.Speechsense.V1.ProjectService.ProjectServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Speechsense.V1.TalkService.TalkServiceClient TalkService
        {
            get
            {
                return new Yandex.Cloud.Speechsense.V1.TalkService.TalkServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Spark : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Spark(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Spark is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Spark.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Spark.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Spark.V1.JobService.JobServiceClient JobService
        {
            get
            {
                return new Yandex.Cloud.Spark.V1.JobService.JobServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Smartwebsecurity_Waf : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Smartwebsecurity_Waf(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "smart-web-security")
        {
        }
        
        public virtual Yandex.Cloud.Smartwebsecurity.V1.Waf.RuleSetDescriptorService.RuleSetDescriptorServiceClient RuleSetDescriptorService
        {
            get
            {
                return new Yandex.Cloud.Smartwebsecurity.V1.Waf.RuleSetDescriptorService.RuleSetDescriptorServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Smartwebsecurity.V1.Waf.WafProfileService.WafProfileServiceClient WafProfileService
        {
            get
            {
                return new Yandex.Cloud.Smartwebsecurity.V1.Waf.WafProfileService.WafProfileServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Smartwebsecurity_AdvancedRateLimiter : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Smartwebsecurity_AdvancedRateLimiter(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "smart-web-security")
        {
        }
        
        public virtual Yandex.Cloud.Smartwebsecurity.V1.AdvancedRateLimiter.AdvancedRateLimiterProfileService.AdvancedRateLimiterProfileServiceClient AdvancedRateLimiterProfileService
        {
            get
            {
                return new Yandex.Cloud.Smartwebsecurity.V1.AdvancedRateLimiter.AdvancedRateLimiterProfileService.AdvancedRateLimiterProfileServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Smartwebsecurity : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Smartwebsecurity(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "smart-web-security")
        {
        }
        
        public virtual Yandex.Cloud.Smartwebsecurity.V1.SecurityProfileService.SecurityProfileServiceClient SecurityProfileService
        {
            get
            {
                return new Yandex.Cloud.Smartwebsecurity.V1.SecurityProfileService.SecurityProfileServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Smartwebsecurity_Waf Waf
        {
            get
            {
                return new Services_Smartwebsecurity_Waf(this.Sdk());
            }
        }
        
        public virtual Services_Smartwebsecurity_AdvancedRateLimiter AdvancedRateLimiter
        {
            get
            {
                return new Services_Smartwebsecurity_AdvancedRateLimiter(this.Sdk());
            }
        }
    }
    
    public class Services_Smartcaptcha : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Smartcaptcha(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "smart-captcha")
        {
        }
        
        public virtual Yandex.Cloud.Smartcaptcha.V1.CaptchaService.CaptchaServiceClient CaptchaService
        {
            get
            {
                return new Yandex.Cloud.Smartcaptcha.V1.CaptchaService.CaptchaServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Workflows : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Workflows(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless-workflows")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Workflows.V1.ExecutionService.ExecutionServiceClient ExecutionService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Workflows.V1.ExecutionService.ExecutionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Serverless.Workflows.V1.WorkflowService.WorkflowServiceClient WorkflowService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Workflows.V1.WorkflowService.WorkflowServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Triggers : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Triggers(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless-triggers")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Triggers.V1.TriggerService.TriggerServiceClient TriggerService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Triggers.V1.TriggerService.TriggerServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Mdbproxy : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Mdbproxy(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "mdbproxy")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Mdbproxy.V1.ProxyService.ProxyServiceClient ProxyService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Mdbproxy.V1.ProxyService.ProxyServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Functions : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Functions(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless-functions")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Functions.V1.FunctionService.FunctionServiceClient FunctionService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Functions.V1.FunctionService.FunctionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Serverless.Functions.V1.NetworkService.NetworkServiceClient NetworkService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Functions.V1.NetworkService.NetworkServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Eventrouter : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Eventrouter(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverlesseventrouter-events")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Eventrouter.V1.BusService.BusServiceClient BusService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Eventrouter.V1.BusService.BusServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Serverless.Eventrouter.V1.ConnectorService.ConnectorServiceClient ConnectorService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Eventrouter.V1.ConnectorService.ConnectorServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Serverless.Eventrouter.V1.EventService.EventServiceClient EventService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Eventrouter.V1.EventService.EventServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Serverless.Eventrouter.V1.RuleService.RuleServiceClient RuleService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Eventrouter.V1.RuleService.RuleServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Containers : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Containers(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless-containers")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Containers.V1.ContainerService.ContainerServiceClient ContainerService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Containers.V1.ContainerService.ContainerServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Apigateway_Websocket : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Apigateway_Websocket(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless-gateway-connections")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Apigateway.Websocket.V1.ConnectionService.ConnectionServiceClient ConnectionService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Apigateway.Websocket.V1.ConnectionService.ConnectionServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Serverless_Apigateway : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless_Apigateway(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless-apigateway")
        {
        }
        
        public virtual Yandex.Cloud.Serverless.Apigateway.V1.ApiGatewayService.ApiGatewayServiceClient ApiGatewayService
        {
            get
            {
                return new Yandex.Cloud.Serverless.Apigateway.V1.ApiGatewayService.ApiGatewayServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Serverless_Apigateway_Websocket Websocket
        {
            get
            {
                return new Services_Serverless_Apigateway_Websocket(this.Sdk());
            }
        }
    }
    
    public class Services_Serverless : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Serverless(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "serverless")
        {
        }
        
        public virtual Services_Serverless_Workflows Workflows
        {
            get
            {
                return new Services_Serverless_Workflows(this.Sdk());
            }
        }
        
        public virtual Services_Serverless_Triggers Triggers
        {
            get
            {
                return new Services_Serverless_Triggers(this.Sdk());
            }
        }
        
        public virtual Services_Serverless_Mdbproxy Mdbproxy
        {
            get
            {
                return new Services_Serverless_Mdbproxy(this.Sdk());
            }
        }
        
        public virtual Services_Serverless_Functions Functions
        {
            get
            {
                return new Services_Serverless_Functions(this.Sdk());
            }
        }
        
        public virtual Services_Serverless_Eventrouter Eventrouter
        {
            get
            {
                return new Services_Serverless_Eventrouter(this.Sdk());
            }
        }
        
        public virtual Services_Serverless_Containers Containers
        {
            get
            {
                return new Services_Serverless_Containers(this.Sdk());
            }
        }
        
        public virtual Services_Serverless_Apigateway Apigateway
        {
            get
            {
                return new Services_Serverless_Apigateway(this.Sdk());
            }
        }
    }
    
    public class Services_Searchapi : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Searchapi(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Searchapi is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Searchapi.V2.GenSearchService.GenSearchServiceClient GenSearchService
        {
            get
            {
                return new Yandex.Cloud.Searchapi.V2.GenSearchService.GenSearchServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Searchapi.V2.ImageSearchService.ImageSearchServiceClient ImageSearchService
        {
            get
            {
                return new Yandex.Cloud.Searchapi.V2.ImageSearchService.ImageSearchServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Searchapi.V2.WebSearchAsyncService.WebSearchAsyncServiceClient WebSearchAsyncService
        {
            get
            {
                return new Yandex.Cloud.Searchapi.V2.WebSearchAsyncService.WebSearchAsyncServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Searchapi.V2.WebSearchService.WebSearchServiceClient WebSearchService
        {
            get
            {
                return new Yandex.Cloud.Searchapi.V2.WebSearchService.WebSearchServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Resourcemanager : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Resourcemanager(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "resource-manager")
        {
        }
        
        public virtual Yandex.Cloud.Resourcemanager.V1.CloudService.CloudServiceClient CloudService
        {
            get
            {
                return new Yandex.Cloud.Resourcemanager.V1.CloudService.CloudServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Resourcemanager.V1.FolderService.FolderServiceClient FolderService
        {
            get
            {
                return new Yandex.Cloud.Resourcemanager.V1.FolderService.FolderServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Quotamanager : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Quotamanager(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Quotamanager is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Quotamanager.V1.QuotaLimitService.QuotaLimitServiceClient QuotaLimitService
        {
            get
            {
                return new Yandex.Cloud.Quotamanager.V1.QuotaLimitService.QuotaLimitServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Organizationmanager_Saml : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Organizationmanager_Saml(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "organization-manager")
        {
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.Saml.CertificateService.CertificateServiceClient CertificateService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.Saml.CertificateService.CertificateServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.Saml.FederationService.FederationServiceClient FederationService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.Saml.FederationService.FederationServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Organizationmanager : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Organizationmanager(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "organization-manager")
        {
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.GroupMappingService.GroupMappingServiceClient GroupMappingService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.GroupMappingService.GroupMappingServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.GroupService.GroupServiceClient GroupService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.GroupService.GroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.OrganizationService.OrganizationServiceClient OrganizationService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.OrganizationService.OrganizationServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.OsLoginService.OsLoginServiceClient OsLoginService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.OsLoginService.OsLoginServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.SshCertificateService.SshCertificateServiceClient SshCertificateService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.SshCertificateService.SshCertificateServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Organizationmanager.V1.UserSshKeyService.UserSshKeyServiceClient UserSshKeyService
        {
            get
            {
                return new Yandex.Cloud.Organizationmanager.V1.UserSshKeyService.UserSshKeyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Organizationmanager_Saml Saml
        {
            get
            {
                return new Services_Organizationmanager_Saml(this.Sdk());
            }
        }
    }
    
    public class Services_Operation : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Operation(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "operation")
        {
        }
        
        public virtual Yandex.Cloud.Operation.OperationService.OperationServiceClient OperationService
        {
            get
            {
                return new Yandex.Cloud.Operation.OperationService.OperationServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Monitoring_V3 : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Monitoring_V3(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "monitoring")
        {
        }
        
        public virtual Yandex.Cloud.Monitoring.V3.DashboardService.DashboardServiceClient DashboardService
        {
            get
            {
                return new Yandex.Cloud.Monitoring.V3.DashboardService.DashboardServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Monitoring : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Monitoring(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "monitoring")
        {
        }
        
        public virtual Services_Monitoring_V3 V3
        {
            get
            {
                return new Services_Monitoring_V3(this.Sdk());
            }
        }
    }
    
    public class Services_Metastore : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Metastore(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Metastore is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Metastore.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Metastore.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Sqlserver : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Sqlserver(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-sqlserver")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Sqlserver.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Sqlserver.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Sqlserver.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Sqlserver.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Sqlserver.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Sqlserver.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Sqlserver.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Sqlserver.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Sqlserver.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Sqlserver.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Spqr : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Spqr(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Mdb_Spqr is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Mdb.Spqr.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Spqr.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Spqr.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Spqr.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Spqr.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Spqr.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Spqr.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Spqr.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Spqr.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Spqr.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Redis : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Redis(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-redis")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Redis.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Redis.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Redis.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Redis.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Redis.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Redis.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Redis.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Redis.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Postgresql : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Postgresql(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-postgresql")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.BackupRetentionPolicyService.BackupRetentionPolicyServiceClient BackupRetentionPolicyService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.BackupRetentionPolicyService.BackupRetentionPolicyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.PerformanceDiagnosticsService.PerformanceDiagnosticsServiceClient PerformanceDiagnosticsService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.PerformanceDiagnosticsService.PerformanceDiagnosticsServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Postgresql.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Postgresql.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Opensearch : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Opensearch(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-opensearch")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Opensearch.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Opensearch.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Opensearch.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Opensearch.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Opensearch.V1.ExtensionService.ExtensionServiceClient ExtensionService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Opensearch.V1.ExtensionService.ExtensionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Opensearch.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Opensearch.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Mysql : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Mysql(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-mysql")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Mysql.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mysql.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mysql.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mysql.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mysql.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mysql.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mysql.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mysql.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mysql.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mysql.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Mongodb : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Mongodb(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-mongodb")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Mongodb.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mongodb.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mongodb.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mongodb.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mongodb.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mongodb.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mongodb.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mongodb.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Mongodb.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Mongodb.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Kafka : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Kafka(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-kafka")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Kafka.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Kafka.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Kafka.V1.ConnectorService.ConnectorServiceClient ConnectorService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Kafka.V1.ConnectorService.ConnectorServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Kafka.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Kafka.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Kafka.V1.TopicService.TopicServiceClient TopicService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Kafka.V1.TopicService.TopicServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Kafka.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Kafka.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Greenplum : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Greenplum(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-greenplum")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.HBARuleService.HBARuleServiceClient HBARuleService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.HBARuleService.HBARuleServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.PXFDatasourceService.PXFDatasourceServiceClient PXFDatasourceService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.PXFDatasourceService.PXFDatasourceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.ResourceGroupService.ResourceGroupServiceClient ResourceGroupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.ResourceGroupService.ResourceGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Greenplum.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Greenplum.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Elasticsearch : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Elasticsearch(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-elasticsearch")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Elasticsearch.V1.AuthService.AuthServiceClient AuthService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Elasticsearch.V1.AuthService.AuthServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Elasticsearch.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Elasticsearch.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Elasticsearch.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Elasticsearch.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Elasticsearch.V1.ExtensionService.ExtensionServiceClient ExtensionService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Elasticsearch.V1.ExtensionService.ExtensionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Elasticsearch.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Elasticsearch.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Elasticsearch.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Elasticsearch.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb_Clickhouse : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb_Clickhouse(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-clickhouse")
        {
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.ClusterExtensionService.ClusterExtensionServiceClient ClusterExtensionService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.ClusterExtensionService.ClusterExtensionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.DatabaseService.DatabaseServiceClient DatabaseService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.DatabaseService.DatabaseServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.ExtensionService.ExtensionServiceClient ExtensionService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.ExtensionService.ExtensionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaService.FormatSchemaServiceClient FormatSchemaService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaService.FormatSchemaServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.MlModelService.MlModelServiceClient MlModelService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.MlModelService.MlModelServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.UserService.UserServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Mdb.Clickhouse.V1.VersionsService.VersionsServiceClient VersionsService
        {
            get
            {
                return new Yandex.Cloud.Mdb.Clickhouse.V1.VersionsService.VersionsServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Mdb : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Mdb(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "mdb")
        {
        }
        
        public virtual Services_Mdb_Sqlserver Sqlserver
        {
            get
            {
                return new Services_Mdb_Sqlserver(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Spqr Spqr
        {
            get
            {
                return new Services_Mdb_Spqr(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Redis Redis
        {
            get
            {
                return new Services_Mdb_Redis(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Postgresql Postgresql
        {
            get
            {
                return new Services_Mdb_Postgresql(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Opensearch Opensearch
        {
            get
            {
                return new Services_Mdb_Opensearch(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Mysql Mysql
        {
            get
            {
                return new Services_Mdb_Mysql(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Mongodb Mongodb
        {
            get
            {
                return new Services_Mdb_Mongodb(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Kafka Kafka
        {
            get
            {
                return new Services_Mdb_Kafka(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Greenplum Greenplum
        {
            get
            {
                return new Services_Mdb_Greenplum(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Elasticsearch Elasticsearch
        {
            get
            {
                return new Services_Mdb_Elasticsearch(this.Sdk());
            }
        }
        
        public virtual Services_Mdb_Clickhouse Clickhouse
        {
            get
            {
                return new Services_Mdb_Clickhouse(this.Sdk());
            }
        }
    }
    
    public class Services_Marketplace_Metering : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Marketplace_Metering(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "marketplace")
        {
        }
        
        public virtual Yandex.Cloud.Marketplace.Metering.V1.ImageProductUsageService.ImageProductUsageServiceClient ImageProductUsageService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Metering.V1.ImageProductUsageService.ImageProductUsageServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Marketplace.Metering.V1.ProductUsageService.ProductUsageServiceClient ProductUsageService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Metering.V1.ProductUsageService.ProductUsageServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Marketplace_Pim_Saas : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Marketplace_Pim_Saas(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Marketplace_Pim_Saas is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Marketplace.Pim.V1.Saas.ProductInstanceService.ProductInstanceServiceClient ProductInstanceService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Pim.V1.Saas.ProductInstanceService.ProductInstanceServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Marketplace_Pim : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Marketplace_Pim(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Marketplace_Pim is not supported at this moment");
        }
        
        public virtual Services_Marketplace_Pim_Saas Saas
        {
            get
            {
                return new Services_Marketplace_Pim_Saas(this.Sdk());
            }
        }
    }
    
    public class Services_Marketplace_Licensemanager_Saas : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Marketplace_Licensemanager_Saas(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "marketplace")
        {
        }
        
        public virtual Yandex.Cloud.Marketplace.Licensemanager.Saas.V1.InstanceService.InstanceServiceClient InstanceService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Licensemanager.Saas.V1.InstanceService.InstanceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Marketplace.Licensemanager.Saas.V1.LockService.LockServiceClient LockService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Licensemanager.Saas.V1.LockService.LockServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Marketplace_Licensemanager : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Marketplace_Licensemanager(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "marketplace")
        {
        }
        
        public virtual Yandex.Cloud.Marketplace.Licensemanager.V1.InstanceService.InstanceServiceClient InstanceService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Licensemanager.V1.InstanceService.InstanceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Marketplace.Licensemanager.V1.LockService.LockServiceClient LockService
        {
            get
            {
                return new Yandex.Cloud.Marketplace.Licensemanager.V1.LockService.LockServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Marketplace_Licensemanager_Saas Saas
        {
            get
            {
                return new Services_Marketplace_Licensemanager_Saas(this.Sdk());
            }
        }
    }
    
    public class Services_Marketplace : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Marketplace(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "marketplace")
        {
        }
        
        public virtual Services_Marketplace_Metering Metering
        {
            get
            {
                return new Services_Marketplace_Metering(this.Sdk());
            }
        }
        
        public virtual Services_Marketplace_Pim Pim
        {
            get
            {
                return new Services_Marketplace_Pim(this.Sdk());
            }
        }
        
        public virtual Services_Marketplace_Licensemanager Licensemanager
        {
            get
            {
                return new Services_Marketplace_Licensemanager(this.Sdk());
            }
        }
    }
    
    public class Services_Logging : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Logging(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "logging")
        {
        }
        
        public virtual Yandex.Cloud.Logging.V1.ExportService.ExportServiceClient ExportService
        {
            get
            {
                return new Yandex.Cloud.Logging.V1.ExportService.ExportServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Logging.V1.LogGroupService.LogGroupServiceClient LogGroupService
        {
            get
            {
                return new Yandex.Cloud.Logging.V1.LogGroupService.LogGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Logging.V1.LogIngestionService.LogIngestionServiceClient LogIngestionService
        {
            get
            {
                return new Yandex.Cloud.Logging.V1.LogIngestionService.LogIngestionServiceClient(this.GetChannel("log-ingestion"));
            }
        }
        
        public virtual Yandex.Cloud.Logging.V1.LogReadingService.LogReadingServiceClient LogReadingService
        {
            get
            {
                return new Yandex.Cloud.Logging.V1.LogReadingService.LogReadingServiceClient(this.GetChannel("log-reading"));
            }
        }
        
        public virtual Yandex.Cloud.Logging.V1.SinkService.SinkServiceClient SinkService
        {
            get
            {
                return new Yandex.Cloud.Logging.V1.SinkService.SinkServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Lockbox : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Lockbox(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "lockbox")
        {
        }
        
        public virtual Yandex.Cloud.Lockbox.V1.PayloadService.PayloadServiceClient PayloadService
        {
            get
            {
                return new Yandex.Cloud.Lockbox.V1.PayloadService.PayloadServiceClient(this.GetChannel("lockbox-payload"));
            }
        }
        
        public virtual Yandex.Cloud.Lockbox.V1.SecretService.SecretServiceClient SecretService
        {
            get
            {
                return new Yandex.Cloud.Lockbox.V1.SecretService.SecretServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Loadtesting_Api : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Loadtesting_Api(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "loadtesting")
        {
        }
        
        public virtual Yandex.Cloud.Loadtesting.Api.V1.AgentService.AgentServiceClient AgentService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Api.V1.AgentService.AgentServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Api.V1.ConfigService.ConfigServiceClient ConfigService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Api.V1.ConfigService.ConfigServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Api.V1.RegressionDashboardService.RegressionDashboardServiceClient RegressionDashboardService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Api.V1.RegressionDashboardService.RegressionDashboardServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Api.V1.ReportService.ReportServiceClient ReportService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Api.V1.ReportService.ReportServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Api.V1.TestService.TestServiceClient TestService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Api.V1.TestService.TestServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Loadtesting_Agent : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Loadtesting_Agent(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "loadtesting")
        {
        }
        
        public virtual Yandex.Cloud.Loadtesting.Agent.V1.AgentRegistrationService.AgentRegistrationServiceClient AgentRegistrationService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Agent.V1.AgentRegistrationService.AgentRegistrationServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Agent.V1.AgentService.AgentServiceClient AgentService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Agent.V1.AgentService.AgentServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Agent.V1.JobService.JobServiceClient JobService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Agent.V1.JobService.JobServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Agent.V1.MonitoringService.MonitoringServiceClient MonitoringService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Agent.V1.MonitoringService.MonitoringServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Agent.V1.TestService.TestServiceClient TestService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Agent.V1.TestService.TestServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadtesting.Agent.V1.TrailService.TrailServiceClient TrailService
        {
            get
            {
                return new Yandex.Cloud.Loadtesting.Agent.V1.TrailService.TrailServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Loadtesting : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Loadtesting(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "loadtesting")
        {
        }
        
        public virtual Services_Loadtesting_Api Api
        {
            get
            {
                return new Services_Loadtesting_Api(this.Sdk());
            }
        }
        
        public virtual Services_Loadtesting_Agent Agent
        {
            get
            {
                return new Services_Loadtesting_Agent(this.Sdk());
            }
        }
    }
    
    public class Services_Loadbalancer : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Loadbalancer(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "load-balancer")
        {
        }
        
        public virtual Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerService.NetworkLoadBalancerServiceClient NetworkLoadBalancerService
        {
            get
            {
                return new Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerService.NetworkLoadBalancerServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Loadbalancer.V1.TargetGroupService.TargetGroupServiceClient TargetGroupService
        {
            get
            {
                return new Yandex.Cloud.Loadbalancer.V1.TargetGroupService.TargetGroupServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Kms_Asymmetricsignature : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Kms_Asymmetricsignature(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "kms-crypto")
        {
        }
        
        public virtual Yandex.Cloud.Kms.V1.Asymmetricsignature.AsymmetricSignatureCryptoService.AsymmetricSignatureCryptoServiceClient AsymmetricSignatureCryptoService
        {
            get
            {
                return new Yandex.Cloud.Kms.V1.Asymmetricsignature.AsymmetricSignatureCryptoService.AsymmetricSignatureCryptoServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Kms.V1.Asymmetricsignature.AsymmetricSignatureKeyService.AsymmetricSignatureKeyServiceClient AsymmetricSignatureKeyService
        {
            get
            {
                return new Yandex.Cloud.Kms.V1.Asymmetricsignature.AsymmetricSignatureKeyService.AsymmetricSignatureKeyServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Kms_Asymmetricencryption : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Kms_Asymmetricencryption(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "kms-crypto")
        {
        }
        
        public virtual Yandex.Cloud.Kms.V1.Asymmetricencryption.AsymmetricEncryptionCryptoService.AsymmetricEncryptionCryptoServiceClient AsymmetricEncryptionCryptoService
        {
            get
            {
                return new Yandex.Cloud.Kms.V1.Asymmetricencryption.AsymmetricEncryptionCryptoService.AsymmetricEncryptionCryptoServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Kms.V1.Asymmetricencryption.AsymmetricEncryptionKeyService.AsymmetricEncryptionKeyServiceClient AsymmetricEncryptionKeyService
        {
            get
            {
                return new Yandex.Cloud.Kms.V1.Asymmetricencryption.AsymmetricEncryptionKeyService.AsymmetricEncryptionKeyServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Kms : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Kms(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "kms")
        {
        }
        
        public virtual Yandex.Cloud.Kms.V1.SymmetricCryptoService.SymmetricCryptoServiceClient SymmetricCryptoService
        {
            get
            {
                return new Yandex.Cloud.Kms.V1.SymmetricCryptoService.SymmetricCryptoServiceClient(this.GetChannel("kms-crypto"));
            }
        }
        
        public virtual Yandex.Cloud.Kms.V1.SymmetricKeyService.SymmetricKeyServiceClient SymmetricKeyService
        {
            get
            {
                return new Yandex.Cloud.Kms.V1.SymmetricKeyService.SymmetricKeyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Kms_Asymmetricsignature Asymmetricsignature
        {
            get
            {
                return new Services_Kms_Asymmetricsignature(this.Sdk());
            }
        }
        
        public virtual Services_Kms_Asymmetricencryption Asymmetricencryption
        {
            get
            {
                return new Services_Kms_Asymmetricencryption(this.Sdk());
            }
        }
    }
    
    public class Services_K8S_Marketplace : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_K8S_Marketplace(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-kubernetes")
        {
        }
        
        public virtual Yandex.Cloud.K8S.Marketplace.V1.HelmReleaseService.HelmReleaseServiceClient HelmReleaseService
        {
            get
            {
                return new Yandex.Cloud.K8S.Marketplace.V1.HelmReleaseService.HelmReleaseServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_K8S : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_K8S(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-kubernetes")
        {
        }
        
        public virtual Yandex.Cloud.K8S.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.K8S.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.K8S.V1.NodeGroupService.NodeGroupServiceClient NodeGroupService
        {
            get
            {
                return new Yandex.Cloud.K8S.V1.NodeGroupService.NodeGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.K8S.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.K8S.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.K8S.V1.VersionService.VersionServiceClient VersionService
        {
            get
            {
                return new Yandex.Cloud.K8S.V1.VersionService.VersionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_K8S_Marketplace Marketplace
        {
            get
            {
                return new Services_K8S_Marketplace(this.Sdk());
            }
        }
    }
    
    public class Services_Iot_Devices : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iot_Devices(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iot-devices")
        {
        }
        
        public virtual Yandex.Cloud.Iot.Devices.V1.DeviceDataService.DeviceDataServiceClient DeviceDataService
        {
            get
            {
                return new Yandex.Cloud.Iot.Devices.V1.DeviceDataService.DeviceDataServiceClient(this.GetChannel("iot-data"));
            }
        }
        
        public virtual Yandex.Cloud.Iot.Devices.V1.DeviceService.DeviceServiceClient DeviceService
        {
            get
            {
                return new Yandex.Cloud.Iot.Devices.V1.DeviceService.DeviceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iot.Devices.V1.RegistryDataService.RegistryDataServiceClient RegistryDataService
        {
            get
            {
                return new Yandex.Cloud.Iot.Devices.V1.RegistryDataService.RegistryDataServiceClient(this.GetChannel("iot-data"));
            }
        }
        
        public virtual Yandex.Cloud.Iot.Devices.V1.RegistryService.RegistryServiceClient RegistryService
        {
            get
            {
                return new Yandex.Cloud.Iot.Devices.V1.RegistryService.RegistryServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Iot_Broker : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iot_Broker(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iot-broker")
        {
        }
        
        public virtual Yandex.Cloud.Iot.Broker.V1.BrokerDataService.BrokerDataServiceClient BrokerDataService
        {
            get
            {
                return new Yandex.Cloud.Iot.Broker.V1.BrokerDataService.BrokerDataServiceClient(this.GetChannel("broker-data"));
            }
        }
        
        public virtual Yandex.Cloud.Iot.Broker.V1.BrokerService.BrokerServiceClient BrokerService
        {
            get
            {
                return new Yandex.Cloud.Iot.Broker.V1.BrokerService.BrokerServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Iot : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iot(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iot")
        {
        }
        
        public virtual Services_Iot_Devices Devices
        {
            get
            {
                return new Services_Iot_Devices(this.Sdk());
            }
        }
        
        public virtual Services_Iot_Broker Broker
        {
            get
            {
                return new Services_Iot_Broker(this.Sdk());
            }
        }
    }
    
    public class Services_Iam_Workload_Oidc : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iam_Workload_Oidc(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iam")
        {
        }
        
        public virtual Yandex.Cloud.Iam.V1.Workload.Oidc.FederationService.FederationServiceClient FederationService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.Workload.Oidc.FederationService.FederationServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Iam_Workload : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iam_Workload(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iam")
        {
        }
        
        public virtual Yandex.Cloud.Iam.V1.Workload.FederatedCredentialService.FederatedCredentialServiceClient FederatedCredentialService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.Workload.FederatedCredentialService.FederatedCredentialServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Iam_Workload_Oidc Oidc
        {
            get
            {
                return new Services_Iam_Workload_Oidc(this.Sdk());
            }
        }
    }
    
    public class Services_Iam_Awscompatibility : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iam_Awscompatibility(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iam")
        {
        }
        
        public virtual Yandex.Cloud.Iam.V1.Awscompatibility.AccessKeyService.AccessKeyServiceClient AccessKeyService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.Awscompatibility.AccessKeyService.AccessKeyServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Iam : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Iam(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "iam")
        {
        }
        
        public virtual Yandex.Cloud.Iam.V1.ApiKeyService.ApiKeyServiceClient ApiKeyService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.ApiKeyService.ApiKeyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.IamTokenService.IamTokenServiceClient IamTokenService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.IamTokenService.IamTokenServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.KeyService.KeyServiceClient KeyService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.KeyService.KeyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.RefreshTokenService.RefreshTokenServiceClient RefreshTokenService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.RefreshTokenService.RefreshTokenServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.RoleService.RoleServiceClient RoleService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.RoleService.RoleServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.ServiceAccountService.ServiceAccountServiceClient ServiceAccountService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.ServiceAccountService.ServiceAccountServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.ServiceControlService.ServiceControlServiceClient ServiceControlService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.ServiceControlService.ServiceControlServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.UserAccountService.UserAccountServiceClient UserAccountService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.UserAccountService.UserAccountServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Iam.V1.YandexPassportUserAccountService.YandexPassportUserAccountServiceClient YandexPassportUserAccountService
        {
            get
            {
                return new Yandex.Cloud.Iam.V1.YandexPassportUserAccountService.YandexPassportUserAccountServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Iam_Workload Workload
        {
            get
            {
                return new Services_Iam_Workload(this.Sdk());
            }
        }
        
        public virtual Services_Iam_Awscompatibility Awscompatibility
        {
            get
            {
                return new Services_Iam_Awscompatibility(this.Sdk());
            }
        }
    }
    
    public class Services_Gitlab : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Gitlab(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Gitlab is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Gitlab.V1.InstanceService.InstanceServiceClient InstanceService
        {
            get
            {
                return new Yandex.Cloud.Gitlab.V1.InstanceService.InstanceServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Endpoint : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Endpoint(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "endpoint")
        {
        }
        
        public virtual Yandex.Cloud.Endpoint.ApiEndpointService.ApiEndpointServiceClient ApiEndpointService
        {
            get
            {
                return new Yandex.Cloud.Endpoint.ApiEndpointService.ApiEndpointServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Dns : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Dns(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "dns")
        {
        }
        
        public virtual Yandex.Cloud.Dns.V1.DnsZoneService.DnsZoneServiceClient DnsZoneService
        {
            get
            {
                return new Yandex.Cloud.Dns.V1.DnsZoneService.DnsZoneServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Datatransfer : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Datatransfer(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "datatransfer")
        {
        }
        
        public virtual Yandex.Cloud.Datatransfer.V1.EndpointService.EndpointServiceClient EndpointService
        {
            get
            {
                return new Yandex.Cloud.Datatransfer.V1.EndpointService.EndpointServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datatransfer.V1.TransferService.TransferServiceClient TransferService
        {
            get
            {
                return new Yandex.Cloud.Datatransfer.V1.TransferService.TransferServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Datasphere_Jobs : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Datasphere_Jobs(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "datasphere")
        {
        }
        
        public virtual Yandex.Cloud.Datasphere.V2.Jobs.ProjectJobService.ProjectJobServiceClient ProjectJobService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V2.Jobs.ProjectJobService.ProjectJobServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Datasphere : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Datasphere(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "datasphere")
        {
        }
        
        public virtual Yandex.Cloud.Datasphere.V2.CommunityService.CommunityServiceClient CommunityService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V2.CommunityService.CommunityServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V2.DatasetService.DatasetServiceClient DatasetService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V2.DatasetService.DatasetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V2.DockerImageService.DockerImageServiceClient DockerImageService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V2.DockerImageService.DockerImageServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V1.ProjectService.ProjectServiceClient ProjectService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V1.ProjectService.ProjectServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V2.S3Service.S3ServiceClient S3Service
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V2.S3Service.S3ServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V1.AppTokenService.AppTokenServiceClient AppTokenService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V1.AppTokenService.AppTokenServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V1.FolderBudgetService.FolderBudgetServiceClient FolderBudgetService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V1.FolderBudgetService.FolderBudgetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V1.NodeService.NodeServiceClient NodeService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V1.NodeService.NodeServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Datasphere.V1.ProjectDataService.ProjectDataServiceClient ProjectDataService
        {
            get
            {
                return new Yandex.Cloud.Datasphere.V1.ProjectDataService.ProjectDataServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Datasphere_Jobs Jobs
        {
            get
            {
                return new Services_Datasphere_Jobs(this.Sdk());
            }
        }
    }
    
    public class Services_Dataproc_Manager : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Dataproc_Manager(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "dataproc-manager")
        {
        }
        
        public virtual Yandex.Cloud.Dataproc.Manager.V1.JobService.JobServiceClient JobService
        {
            get
            {
                return new Yandex.Cloud.Dataproc.Manager.V1.JobService.JobServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Dataproc.Manager.V1.DataprocManagerService.DataprocManagerServiceClient DataprocManagerService
        {
            get
            {
                return new Yandex.Cloud.Dataproc.Manager.V1.DataprocManagerService.DataprocManagerServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Dataproc : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Dataproc(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "dataproc")
        {
        }
        
        public virtual Yandex.Cloud.Dataproc.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Dataproc.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Dataproc.V1.JobService.JobServiceClient JobService
        {
            get
            {
                return new Yandex.Cloud.Dataproc.V1.JobService.JobServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Dataproc.V1.ResourcePresetService.ResourcePresetServiceClient ResourcePresetService
        {
            get
            {
                return new Yandex.Cloud.Dataproc.V1.ResourcePresetService.ResourcePresetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Dataproc.V1.SubclusterService.SubclusterServiceClient SubclusterService
        {
            get
            {
                return new Yandex.Cloud.Dataproc.V1.SubclusterService.SubclusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Dataproc_Manager Manager
        {
            get
            {
                return new Services_Dataproc_Manager(this.Sdk());
            }
        }
    }
    
    public class Services_Containerregistry : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Containerregistry(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "container-registry")
        {
        }
        
        public virtual Yandex.Cloud.Containerregistry.V1.ImageService.ImageServiceClient ImageService
        {
            get
            {
                return new Yandex.Cloud.Containerregistry.V1.ImageService.ImageServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Containerregistry.V1.LifecyclePolicyService.LifecyclePolicyServiceClient LifecyclePolicyService
        {
            get
            {
                return new Yandex.Cloud.Containerregistry.V1.LifecyclePolicyService.LifecyclePolicyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Containerregistry.V1.RegistryService.RegistryServiceClient RegistryService
        {
            get
            {
                return new Yandex.Cloud.Containerregistry.V1.RegistryService.RegistryServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Containerregistry.V1.RepositoryService.RepositoryServiceClient RepositoryService
        {
            get
            {
                return new Yandex.Cloud.Containerregistry.V1.RepositoryService.RepositoryServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Containerregistry.V1.ScannerService.ScannerServiceClient ScannerService
        {
            get
            {
                return new Yandex.Cloud.Containerregistry.V1.ScannerService.ScannerServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Containerregistry.V1.ScanPolicyService.ScanPolicyServiceClient ScanPolicyService
        {
            get
            {
                return new Yandex.Cloud.Containerregistry.V1.ScanPolicyService.ScanPolicyServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Compute_Instancegroup : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Compute_Instancegroup(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "compute")
        {
        }
        
        public virtual Yandex.Cloud.Compute.V1.Instancegroup.InstanceGroupService.InstanceGroupServiceClient InstanceGroupService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.Instancegroup.InstanceGroupService.InstanceGroupServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Compute : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Compute(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "compute")
        {
        }
        
        public virtual Yandex.Cloud.Compute.V1.DiskPlacementGroupService.DiskPlacementGroupServiceClient DiskPlacementGroupService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.DiskPlacementGroupService.DiskPlacementGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.DiskService.DiskServiceClient DiskService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.DiskService.DiskServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.DiskTypeService.DiskTypeServiceClient DiskTypeService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.DiskTypeService.DiskTypeServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.FilesystemService.FilesystemServiceClient FilesystemService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.FilesystemService.FilesystemServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.GpuClusterService.GpuClusterServiceClient GpuClusterService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.GpuClusterService.GpuClusterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.HostGroupService.HostGroupServiceClient HostGroupService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.HostGroupService.HostGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.HostTypeService.HostTypeServiceClient HostTypeService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.HostTypeService.HostTypeServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.ImageService.ImageServiceClient ImageService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.ImageService.ImageServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.InstanceService.InstanceServiceClient InstanceService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.InstanceService.InstanceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.PlacementGroupService.PlacementGroupServiceClient PlacementGroupService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.PlacementGroupService.PlacementGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.ReservedInstancePoolService.ReservedInstancePoolServiceClient ReservedInstancePoolService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.ReservedInstancePoolService.ReservedInstancePoolServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.SnapshotScheduleService.SnapshotScheduleServiceClient SnapshotScheduleService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.SnapshotScheduleService.SnapshotScheduleServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.SnapshotService.SnapshotServiceClient SnapshotService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.SnapshotService.SnapshotServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Compute.V1.ZoneService.ZoneServiceClient ZoneService
        {
            get
            {
                return new Yandex.Cloud.Compute.V1.ZoneService.ZoneServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Compute_Instancegroup Instancegroup
        {
            get
            {
                return new Services_Compute_Instancegroup(this.Sdk());
            }
        }
    }
    
    public class Services_Cloudrouter : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Cloudrouter(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "cloudrouter")
        {
        }
        
        public virtual Yandex.Cloud.Cloudrouter.V1.RoutingInstanceService.RoutingInstanceServiceClient RoutingInstanceService
        {
            get
            {
                return new Yandex.Cloud.Cloudrouter.V1.RoutingInstanceService.RoutingInstanceServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Cloudregistry : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Cloudregistry(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Cloudregistry is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Cloudregistry.V1.ArtifactService.ArtifactServiceClient ArtifactService
        {
            get
            {
                return new Yandex.Cloud.Cloudregistry.V1.ArtifactService.ArtifactServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cloudregistry.V1.RegistryService.RegistryServiceClient RegistryService
        {
            get
            {
                return new Yandex.Cloud.Cloudregistry.V1.RegistryService.RegistryServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Clouddesktop_Api : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Clouddesktop_Api(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Clouddesktop_Api is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Clouddesktop.V1.Api.DesktopGroupService.DesktopGroupServiceClient DesktopGroupService
        {
            get
            {
                return new Yandex.Cloud.Clouddesktop.V1.Api.DesktopGroupService.DesktopGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Clouddesktop.V1.Api.DesktopImageService.DesktopImageServiceClient DesktopImageService
        {
            get
            {
                return new Yandex.Cloud.Clouddesktop.V1.Api.DesktopImageService.DesktopImageServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Clouddesktop.V1.Api.DesktopService.DesktopServiceClient DesktopService
        {
            get
            {
                return new Yandex.Cloud.Clouddesktop.V1.Api.DesktopService.DesktopServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Clouddesktop : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Clouddesktop(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Clouddesktop is not supported at this moment");
        }
        
        public virtual Services_Clouddesktop_Api Api
        {
            get
            {
                return new Services_Clouddesktop_Api(this.Sdk());
            }
        }
    }
    
    public class Services_Cloudapps_Workload : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Cloudapps_Workload(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "cloudapps")
        {
        }
        
        public virtual Yandex.Cloud.Cloudapps.Workload.V1.CloudApplicationService.CloudApplicationServiceClient CloudApplicationService
        {
            get
            {
                return new Yandex.Cloud.Cloudapps.Workload.V1.CloudApplicationService.CloudApplicationServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Cloudapps : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Cloudapps(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "cloudapps")
        {
        }
        
        public virtual Services_Cloudapps_Workload Workload
        {
            get
            {
                return new Services_Cloudapps_Workload(this.Sdk());
            }
        }
    }
    
    public class Services_Cic : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Cic(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "cic")
        {
        }
        
        public virtual Yandex.Cloud.Cic.V1.PartnerService.PartnerServiceClient PartnerService
        {
            get
            {
                return new Yandex.Cloud.Cic.V1.PartnerService.PartnerServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cic.V1.PointOfPresenceService.PointOfPresenceServiceClient PointOfPresenceService
        {
            get
            {
                return new Yandex.Cloud.Cic.V1.PointOfPresenceService.PointOfPresenceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cic.V1.PrivateConnectionService.PrivateConnectionServiceClient PrivateConnectionService
        {
            get
            {
                return new Yandex.Cloud.Cic.V1.PrivateConnectionService.PrivateConnectionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cic.V1.PublicConnectionService.PublicConnectionServiceClient PublicConnectionService
        {
            get
            {
                return new Yandex.Cloud.Cic.V1.PublicConnectionService.PublicConnectionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cic.V1.TrunkConnectionService.TrunkConnectionServiceClient TrunkConnectionService
        {
            get
            {
                return new Yandex.Cloud.Cic.V1.TrunkConnectionService.TrunkConnectionServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Certificatemanager : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Certificatemanager(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "certificate-manager")
        {
        }
        
        public virtual Yandex.Cloud.Certificatemanager.V1.CertificateContentService.CertificateContentServiceClient CertificateContentService
        {
            get
            {
                return new Yandex.Cloud.Certificatemanager.V1.CertificateContentService.CertificateContentServiceClient(this.GetChannel("certificate-manager-data"));
            }
        }
        
        public virtual Yandex.Cloud.Certificatemanager.V1.CertificateService.CertificateServiceClient CertificateService
        {
            get
            {
                return new Yandex.Cloud.Certificatemanager.V1.CertificateService.CertificateServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Cdn : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Cdn(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "cdn")
        {
        }
        
        public virtual Yandex.Cloud.Cdn.V1.CacheService.CacheServiceClient CacheService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.CacheService.CacheServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.OriginGroupService.OriginGroupServiceClient OriginGroupService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.OriginGroupService.OriginGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.OriginService.OriginServiceClient OriginService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.OriginService.OriginServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.ProviderService.ProviderServiceClient ProviderService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.ProviderService.ProviderServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.RawLogsService.RawLogsServiceClient RawLogsService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.RawLogsService.RawLogsServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.ResourceService.ResourceServiceClient ResourceService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.ResourceService.ResourceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.ResourceRulesService.ResourceRulesServiceClient ResourceRulesService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.ResourceRulesService.ResourceRulesServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Cdn.V1.ShieldingService.ShieldingServiceClient ShieldingService
        {
            get
            {
                return new Yandex.Cloud.Cdn.V1.ShieldingService.ShieldingServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Billing : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Billing(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "billing")
        {
        }
        
        public virtual Yandex.Cloud.Billing.V1.BillingAccountService.BillingAccountServiceClient BillingAccountService
        {
            get
            {
                return new Yandex.Cloud.Billing.V1.BillingAccountService.BillingAccountServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Billing.V1.BudgetService.BudgetServiceClient BudgetService
        {
            get
            {
                return new Yandex.Cloud.Billing.V1.BudgetService.BudgetServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Billing.V1.CustomerService.CustomerServiceClient CustomerService
        {
            get
            {
                return new Yandex.Cloud.Billing.V1.CustomerService.CustomerServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Billing.V1.ServiceService.ServiceServiceClient ServiceService
        {
            get
            {
                return new Yandex.Cloud.Billing.V1.ServiceService.ServiceServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Billing.V1.SkuService.SkuServiceClient SkuService
        {
            get
            {
                return new Yandex.Cloud.Billing.V1.SkuService.SkuServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Backup : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Backup(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "backup")
        {
        }
        
        public virtual Yandex.Cloud.Backup.V1.BackupService.BackupServiceClient BackupService
        {
            get
            {
                return new Yandex.Cloud.Backup.V1.BackupService.BackupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Backup.V1.PolicyService.PolicyServiceClient PolicyService
        {
            get
            {
                return new Yandex.Cloud.Backup.V1.PolicyService.PolicyServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Backup.V1.ProviderService.ProviderServiceClient ProviderService
        {
            get
            {
                return new Yandex.Cloud.Backup.V1.ProviderService.ProviderServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Backup.V1.ResourceService.ResourceServiceClient ResourceService
        {
            get
            {
                return new Yandex.Cloud.Backup.V1.ResourceService.ResourceServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Audittrails : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Audittrails(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "audittrails")
        {
        }
        
        public virtual Yandex.Cloud.Audittrails.V1.TrailService.TrailServiceClient TrailService
        {
            get
            {
                return new Yandex.Cloud.Audittrails.V1.TrailService.TrailServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Apploadbalancer : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Apploadbalancer(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "application-load-balancer")
        {
        }
        
        public virtual Yandex.Cloud.Apploadbalancer.V1.BackendGroupService.BackendGroupServiceClient BackendGroupService
        {
            get
            {
                return new Yandex.Cloud.Apploadbalancer.V1.BackendGroupService.BackendGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Apploadbalancer.V1.HttpRouterService.HttpRouterServiceClient HttpRouterService
        {
            get
            {
                return new Yandex.Cloud.Apploadbalancer.V1.HttpRouterService.HttpRouterServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Apploadbalancer.V1.LoadBalancerService.LoadBalancerServiceClient LoadBalancerService
        {
            get
            {
                return new Yandex.Cloud.Apploadbalancer.V1.LoadBalancerService.LoadBalancerServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Apploadbalancer.V1.TargetGroupService.TargetGroupServiceClient TargetGroupService
        {
            get
            {
                return new Yandex.Cloud.Apploadbalancer.V1.TargetGroupService.TargetGroupServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Apploadbalancer.V1.VirtualHostService.VirtualHostServiceClient VirtualHostService
        {
            get
            {
                return new Yandex.Cloud.Apploadbalancer.V1.VirtualHostService.VirtualHostServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Airflow : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Airflow(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "managed-airflow")
        {
        }
        
        public virtual Yandex.Cloud.Airflow.V1.ClusterService.ClusterServiceClient ClusterService
        {
            get
            {
                return new Yandex.Cloud.Airflow.V1.ClusterService.ClusterServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Vision : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Vision(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-vision")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Vision.V2.ImageClassifierService.ImageClassifierServiceClient ImageClassifierService
        {
            get
            {
                return new Yandex.Cloud.Ai.Vision.V2.ImageClassifierService.ImageClassifierServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.Vision.V1.VisionService.VisionServiceClient VisionService
        {
            get
            {
                return new Yandex.Cloud.Ai.Vision.V1.VisionService.VisionServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Tuning : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Tuning(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Ai_Tuning is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Ai.Tuning.V1.TuningService.TuningServiceClient TuningService
        {
            get
            {
                return new Yandex.Cloud.Ai.Tuning.V1.TuningService.TuningServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Translate : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Translate(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-translate")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Translate.V2.TranslationService.TranslationServiceClient TranslationService
        {
            get
            {
                return new Yandex.Cloud.Ai.Translate.V2.TranslationService.TranslationServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Stt : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Stt(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-stt")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Stt.V2.SttService.SttServiceClient SttService
        {
            get
            {
                return new Yandex.Cloud.Ai.Stt.V2.SttService.SttServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Ocr : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Ocr(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-vision-ocr")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Ocr.V1.TextRecognitionService.TextRecognitionServiceClient TextRecognitionService
        {
            get
            {
                return new Yandex.Cloud.Ai.Ocr.V1.TextRecognitionService.TextRecognitionServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.Ocr.V1.TextRecognitionAsyncService.TextRecognitionAsyncServiceClient TextRecognitionAsyncService
        {
            get
            {
                return new Yandex.Cloud.Ai.Ocr.V1.TextRecognitionAsyncService.TextRecognitionAsyncServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_FoundationModels_TextClassification : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_FoundationModels_TextClassification(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.TextClassification.TextClassificationService.TextClassificationServiceClient TextClassificationService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.TextClassification.TextClassificationService.TextClassificationServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_FoundationModels_ImageGeneration : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_FoundationModels_ImageGeneration(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.ImageGeneration.ImageGenerationAsyncService.ImageGenerationAsyncServiceClient ImageGenerationAsyncService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.ImageGeneration.ImageGenerationAsyncService.ImageGenerationAsyncServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_FoundationModels : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_FoundationModels(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.EmbeddingsService.EmbeddingsServiceClient EmbeddingsService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.EmbeddingsService.EmbeddingsServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.TextGenerationService.TextGenerationServiceClient TextGenerationService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.TextGenerationService.TextGenerationServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.TextGenerationAsyncService.TextGenerationAsyncServiceClient TextGenerationAsyncService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.TextGenerationAsyncService.TextGenerationAsyncServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.TextGenerationBatchService.TextGenerationBatchServiceClient TextGenerationBatchService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.TextGenerationBatchService.TextGenerationBatchServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.FoundationModels.V1.TokenizerService.TokenizerServiceClient TokenizerService
        {
            get
            {
                return new Yandex.Cloud.Ai.FoundationModels.V1.TokenizerService.TokenizerServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Ai_FoundationModels_TextClassification TextClassification
        {
            get
            {
                return new Services_Ai_FoundationModels_TextClassification(this.Sdk());
            }
        }
        
        public virtual Services_Ai_FoundationModels_ImageGeneration ImageGeneration
        {
            get
            {
                return new Services_Ai_FoundationModels_ImageGeneration(this.Sdk());
            }
        }
    }
    
    public class Services_Ai_Files : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Files(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Files.V1.FileService.FileServiceClient FileService
        {
            get
            {
                return new Yandex.Cloud.Ai.Files.V1.FileService.FileServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Dataset : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Dataset(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Dataset.V1.DatasetService.DatasetServiceClient DatasetService
        {
            get
            {
                return new Yandex.Cloud.Ai.Dataset.V1.DatasetService.DatasetServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_BatchInference : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_BatchInference(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "unknown")
        {
            throw new System.Exception("service Services_Ai_BatchInference is not supported at this moment");
        }
        
        public virtual Yandex.Cloud.Ai.BatchInference.V1.BatchInferenceService.BatchInferenceServiceClient BatchInferenceService
        {
            get
            {
                return new Yandex.Cloud.Ai.BatchInference.V1.BatchInferenceService.BatchInferenceServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Assistants_Users : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Assistants_Users(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.Users.UserService.UserServiceClient UserService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.Users.UserService.UserServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Assistants_Threads : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Assistants_Threads(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.Threads.MessageService.MessageServiceClient MessageService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.Threads.MessageService.MessageServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.Threads.ThreadService.ThreadServiceClient ThreadService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.Threads.ThreadService.ThreadServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Assistants_Searchindex : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Assistants_Searchindex(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.Searchindex.SearchIndexFileService.SearchIndexFileServiceClient SearchIndexFileService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.Searchindex.SearchIndexFileService.SearchIndexFileServiceClient(this.GetChannel());
            }
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.Searchindex.SearchIndexService.SearchIndexServiceClient SearchIndexService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.Searchindex.SearchIndexService.SearchIndexServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Assistants_Runs : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Assistants_Runs(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.Runs.RunService.RunServiceClient RunService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.Runs.RunService.RunServiceClient(this.GetChannel());
            }
        }
    }
    
    public class Services_Ai_Assistants : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai_Assistants(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai-foundation-models")
        {
        }
        
        public virtual Yandex.Cloud.Ai.Assistants.V1.AssistantService.AssistantServiceClient AssistantService
        {
            get
            {
                return new Yandex.Cloud.Ai.Assistants.V1.AssistantService.AssistantServiceClient(this.GetChannel());
            }
        }
        
        public virtual Services_Ai_Assistants_Users Users
        {
            get
            {
                return new Services_Ai_Assistants_Users(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Assistants_Threads Threads
        {
            get
            {
                return new Services_Ai_Assistants_Threads(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Assistants_Searchindex Searchindex
        {
            get
            {
                return new Services_Ai_Assistants_Searchindex(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Assistants_Runs Runs
        {
            get
            {
                return new Services_Ai_Assistants_Runs(this.Sdk());
            }
        }
    }
    
    public class Services_Ai : Yandex.Cloud.ServiceRegistry
    {
        
        public Services_Ai(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "ai")
        {
        }
        
        public virtual Services_Ai_Vision Vision
        {
            get
            {
                return new Services_Ai_Vision(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Tuning Tuning
        {
            get
            {
                return new Services_Ai_Tuning(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Translate Translate
        {
            get
            {
                return new Services_Ai_Translate(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Stt Stt
        {
            get
            {
                return new Services_Ai_Stt(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Ocr Ocr
        {
            get
            {
                return new Services_Ai_Ocr(this.Sdk());
            }
        }
        
        public virtual Services_Ai_FoundationModels FoundationModels
        {
            get
            {
                return new Services_Ai_FoundationModels(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Files Files
        {
            get
            {
                return new Services_Ai_Files(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Dataset Dataset
        {
            get
            {
                return new Services_Ai_Dataset(this.Sdk());
            }
        }
        
        public virtual Services_Ai_BatchInference BatchInference
        {
            get
            {
                return new Services_Ai_BatchInference(this.Sdk());
            }
        }
        
        public virtual Services_Ai_Assistants Assistants
        {
            get
            {
                return new Services_Ai_Assistants(this.Sdk());
            }
        }
    }
    
    public class Services : Yandex.Cloud.ServiceRegistry
    {
        
        public Services(Yandex.Cloud.Sdk sdk) : 
                base(sdk, "")
        {
        }
        
        public virtual Services_Ydb Ydb
        {
            get
            {
                return new Services_Ydb(this.Sdk());
            }
        }
        
        public virtual Services_Vpc Vpc
        {
            get
            {
                return new Services_Vpc(this.Sdk());
            }
        }
        
        public virtual Services_Video Video
        {
            get
            {
                return new Services_Video(this.Sdk());
            }
        }
        
        public virtual Services_Trino Trino
        {
            get
            {
                return new Services_Trino(this.Sdk());
            }
        }
        
        public virtual Services_Storage Storage
        {
            get
            {
                return new Services_Storage(this.Sdk());
            }
        }
        
        public virtual Services_Speechsense Speechsense
        {
            get
            {
                return new Services_Speechsense(this.Sdk());
            }
        }
        
        public virtual Services_Spark Spark
        {
            get
            {
                return new Services_Spark(this.Sdk());
            }
        }
        
        public virtual Services_Smartwebsecurity Smartwebsecurity
        {
            get
            {
                return new Services_Smartwebsecurity(this.Sdk());
            }
        }
        
        public virtual Services_Smartcaptcha Smartcaptcha
        {
            get
            {
                return new Services_Smartcaptcha(this.Sdk());
            }
        }
        
        public virtual Services_Serverless Serverless
        {
            get
            {
                return new Services_Serverless(this.Sdk());
            }
        }
        
        public virtual Services_Searchapi Searchapi
        {
            get
            {
                return new Services_Searchapi(this.Sdk());
            }
        }
        
        public virtual Services_Resourcemanager Resourcemanager
        {
            get
            {
                return new Services_Resourcemanager(this.Sdk());
            }
        }
        
        public virtual Services_Quotamanager Quotamanager
        {
            get
            {
                return new Services_Quotamanager(this.Sdk());
            }
        }
        
        public virtual Services_Organizationmanager Organizationmanager
        {
            get
            {
                return new Services_Organizationmanager(this.Sdk());
            }
        }
        
        public virtual Services_Operation Operation
        {
            get
            {
                return new Services_Operation(this.Sdk());
            }
        }
        
        public virtual Services_Monitoring Monitoring
        {
            get
            {
                return new Services_Monitoring(this.Sdk());
            }
        }
        
        public virtual Services_Metastore Metastore
        {
            get
            {
                return new Services_Metastore(this.Sdk());
            }
        }
        
        public virtual Services_Mdb Mdb
        {
            get
            {
                return new Services_Mdb(this.Sdk());
            }
        }
        
        public virtual Services_Marketplace Marketplace
        {
            get
            {
                return new Services_Marketplace(this.Sdk());
            }
        }
        
        public virtual Services_Logging Logging
        {
            get
            {
                return new Services_Logging(this.Sdk());
            }
        }
        
        public virtual Services_Lockbox Lockbox
        {
            get
            {
                return new Services_Lockbox(this.Sdk());
            }
        }
        
        public virtual Services_Loadtesting Loadtesting
        {
            get
            {
                return new Services_Loadtesting(this.Sdk());
            }
        }
        
        public virtual Services_Loadbalancer Loadbalancer
        {
            get
            {
                return new Services_Loadbalancer(this.Sdk());
            }
        }
        
        public virtual Services_Kms Kms
        {
            get
            {
                return new Services_Kms(this.Sdk());
            }
        }
        
        public virtual Services_K8S K8S
        {
            get
            {
                return new Services_K8S(this.Sdk());
            }
        }
        
        public virtual Services_Iot Iot
        {
            get
            {
                return new Services_Iot(this.Sdk());
            }
        }
        
        public virtual Services_Iam Iam
        {
            get
            {
                return new Services_Iam(this.Sdk());
            }
        }
        
        public virtual Services_Gitlab Gitlab
        {
            get
            {
                return new Services_Gitlab(this.Sdk());
            }
        }
        
        public virtual Services_Endpoint Endpoint
        {
            get
            {
                return new Services_Endpoint(this.Sdk());
            }
        }
        
        public virtual Services_Dns Dns
        {
            get
            {
                return new Services_Dns(this.Sdk());
            }
        }
        
        public virtual Services_Datatransfer Datatransfer
        {
            get
            {
                return new Services_Datatransfer(this.Sdk());
            }
        }
        
        public virtual Services_Datasphere Datasphere
        {
            get
            {
                return new Services_Datasphere(this.Sdk());
            }
        }
        
        public virtual Services_Dataproc Dataproc
        {
            get
            {
                return new Services_Dataproc(this.Sdk());
            }
        }
        
        public virtual Services_Containerregistry Containerregistry
        {
            get
            {
                return new Services_Containerregistry(this.Sdk());
            }
        }
        
        public virtual Services_Compute Compute
        {
            get
            {
                return new Services_Compute(this.Sdk());
            }
        }
        
        public virtual Services_Cloudrouter Cloudrouter
        {
            get
            {
                return new Services_Cloudrouter(this.Sdk());
            }
        }
        
        public virtual Services_Cloudregistry Cloudregistry
        {
            get
            {
                return new Services_Cloudregistry(this.Sdk());
            }
        }
        
        public virtual Services_Clouddesktop Clouddesktop
        {
            get
            {
                return new Services_Clouddesktop(this.Sdk());
            }
        }
        
        public virtual Services_Cloudapps Cloudapps
        {
            get
            {
                return new Services_Cloudapps(this.Sdk());
            }
        }
        
        public virtual Services_Cic Cic
        {
            get
            {
                return new Services_Cic(this.Sdk());
            }
        }
        
        public virtual Services_Certificatemanager Certificatemanager
        {
            get
            {
                return new Services_Certificatemanager(this.Sdk());
            }
        }
        
        public virtual Services_Cdn Cdn
        {
            get
            {
                return new Services_Cdn(this.Sdk());
            }
        }
        
        public virtual Services_Billing Billing
        {
            get
            {
                return new Services_Billing(this.Sdk());
            }
        }
        
        public virtual Services_Backup Backup
        {
            get
            {
                return new Services_Backup(this.Sdk());
            }
        }
        
        public virtual Services_Audittrails Audittrails
        {
            get
            {
                return new Services_Audittrails(this.Sdk());
            }
        }
        
        public virtual Services_Apploadbalancer Apploadbalancer
        {
            get
            {
                return new Services_Apploadbalancer(this.Sdk());
            }
        }
        
        public virtual Services_Airflow Airflow
        {
            get
            {
                return new Services_Airflow(this.Sdk());
            }
        }
        
        public virtual Services_Ai Ai
        {
            get
            {
                return new Services_Ai(this.Sdk());
            }
        }
    }
}
